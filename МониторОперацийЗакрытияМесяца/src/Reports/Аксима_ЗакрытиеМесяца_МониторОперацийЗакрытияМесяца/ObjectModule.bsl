// @Импорт
// ЗакрытиеМесяцаСервер
// * ОпределитьСостояниеЭтаповРасчета
//

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ВариантыОтчетов

// Настройки общей формы отчета подсистемы "Варианты отчетов".
//
// Параметры:
//   Форма - УправляемаяФорма, Неопределено - Форма отчета или форма настроек отчета.
//       Неопределено когда вызов без контекста.
//   КлючВарианта - Строка, Неопределено - Имя предопределенного
//       или уникальный идентификатор пользовательского варианта отчета.
//       Неопределено когда вызов без контекста.
//   Настройки - Структура - см. возвращаемое значение
//       ОтчетыКлиентСервер.ПолучитьНастройкиОтчетаПоУмолчанию().
//
Процедура ОпределитьНастройкиФормы(Форма, КлючВарианта, Настройки) Экспорт
	
	Настройки.СкрытьКомандыРассылки = Истина;
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.ВариантыОтчетов

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Настройки = КомпоновщикНастроек.ПолучитьНастройки();
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(
		СхемаКомпоновкиДанных, 
		Настройки, 
		ДанныеРасшифровки);
	
	ВнешниеНаборыДанных = Новый Структура;
	ВнешниеНаборыДанных.Вставить("КонтейнерРезультата", СостоянияВсехЗакрытийМесяца());
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(
		МакетКомпоновки, 
		ВнешниеНаборыДанных, 
		ДанныеРасшифровки, 
		Истина); // ВозможностьИспользованияВнешнихФункций
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция СостоянияВсехЗакрытийМесяца()
	
	КонтейнерРезультата = КонтейнерРезультатаСостоянияВсехЗакрытийМесяца();
	
	// Для каждого месяца, начиная с текущего и до начала ведения учета в программе.
	// Проверяем состояние этапов закрытия месяца.
	// И собираем таблицу состояний этапов закрытия по всем месяцам.
	
	Период = НачалоМесяца(ТекущаяДата());
	НачалоВеденияУчета = Дата(2000, 1, 1);
	ВсеОперацииЗакрытияМесяца = ВсеОперацииЗакрытияМесяца();
	
	Пока Период > НачалоВеденияУчета Цикл 
		
		СостояниеЭтаповЗакрытияМесяца = СостояниеЭтаповЗакрытияМесяца(ВсеОперацииЗакрытияМесяца, Период);
		
		Если ХотябыОдинЭтапИспользуется(СостояниеЭтаповЗакрытияМесяца) Тогда 
			
			Если ЗначениеПараметраСКД("СкрытьУспешноЗакрытыеМесяцы") = Истина Тогда // Если параметра нет - Неопределено.
				
				Если Не ВсеЭтапыУспешны(СостояниеЭтаповЗакрытияМесяца) Тогда 
					ДобавитьРезультатПоМесяцу(КонтейнерРезультата, Период, СостояниеЭтаповЗакрытияМесяца);
				КонецЕсли;
				
			Иначе 
				ДобавитьРезультатПоМесяцу(КонтейнерРезультата, Период, СостояниеЭтаповЗакрытияМесяца);
			КонецЕсли;
			
			Период = НачалоМесяца(ПредыдущийМесяц(Период)); // Следующий период.
			
		Иначе 
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	Если ЗначениеПараметраСКД("СкрытьНеТребуемыеОперации") = Истина Тогда // Если параметра нет - Неопределено.
		ИсключитьНеИспользуемыеОперации(КонтейнерРезультата, ВсеОперацииЗакрытияМесяца);
	КонецЕсли;
	
	Возврат КонтейнерРезультата;
	
КонецФункции

Функция ХотябыОдинЭтапИспользуется(СостояниеЭтапов)
	
	Для Каждого СостояниеЭтапа Из СостояниеЭтапов Цикл 
		
		Если СостояниеИспользуется(СостояниеЭтапа.Значение)
			И ОперацияЗакрытияЗависитОтМесяца(СостояниеЭтапа.Ключ) Тогда 
			
			Возврат Истина;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

Функция ВсеЭтапыУспешны(СостояниеЭтапов)
	
	Для Каждого СостояниеЭтапа Из СостояниеЭтапов Цикл 
		
		Если СостояниеУспешно(СостояниеЭтапа.Значение) Тогда 
			Возврат Ложь;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Истина;
	
КонецФункции

Функция ПредыдущийМесяц(ТекущаяДата)
	
	Возврат ДобавитьМесяц(ТекущаяДата, -1);
	
КонецФункции

#Область МодельДанныхКонтейнераРезультата

Функция КонтейнерРезультатаСостоянияВсехЗакрытийМесяца()
	
	Результат = Новый ТаблицаЗначений;
	
	Результат.Колонки.Добавить("Месяц");
	Результат.Колонки.Добавить("ОперацияЗакрытияМесяца");
	Результат.Колонки.Добавить("СостояниеОперацииЗакрытияМесяца");
	
	Результат.Индексы.Добавить("Месяц");
	Результат.Индексы.Добавить("ОперацияЗакрытияМесяца");
	
	Возврат Результат;
	
КонецФункции

Процедура ДобавитьРезультатПоМесяцу(КонтейнерРезультата, Период, СостояниеЭтапов)
	
	Для Каждого СостояниеЭтапа Из СостояниеЭтапов Цикл
		
		НоваяСтрока = КонтейнерРезультата.Добавить();
		НоваяСтрока.Месяц = Период;
		НоваяСтрока.ОперацияЗакрытияМесяца = СостояниеЭтапа.Ключ;
		НоваяСтрока.СостояниеОперацииЗакрытияМесяца = СостояниеЭтапа.Значение;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура УдалитьСтрокиРезультата(КонтейнерРезультата, СтрокиРезультата)
	
	Для Каждого СтрокаРезультата Из СтрокиРезультата Цикл
		КонтейнерРезультата.Удалить(СтрокаРезультата);
	КонецЦикла
	
КонецПроцедуры

#Область ИсключениеНеИспользуемыхОпераций

Процедура ИсключитьНеИспользуемыеОперации(КонтейнерРезультата, ВсеОперацииЗакрытияМесяца)
	
	Для Каждого ОперацияЗакрытия Из ВсеОперацииЗакрытияМесяца Цикл
		
		СтрокиРезультата = СтрокиРезультатаМесяцыПоОперацииЗакрытия(КонтейнерРезультата, ОперацияЗакрытия);
		
		Если Не ХотябыОдинМесяцОперацияЗакрытияИспользуется(СтрокиРезультата) Тогда 
			
			УдалитьСтрокиРезультата(КонтейнерРезультата, СтрокиРезультата);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция СтрокиРезультатаМесяцыПоОперацииЗакрытия(КонтейнерРезультата, ОперацияЗакрытия)
	
	Отбор = Новый Структура;
	Отбор.Вставить("ОперацияЗакрытияМесяца", ОперацияЗакрытия);
	
	Возврат КонтейнерРезультата.НайтиСтроки(Отбор);
	
КонецФункции

Функция ХотябыОдинМесяцОперацияЗакрытияИспользуется(СтрокиРезультата)
	
	Для Каждого СтрокаРезультата Из СтрокиРезультата Цикл 
		
		Если СостояниеИспользуется(СтрокаРезультата.СостояниеОперацииЗакрытияМесяца) Тогда 
			Возврат Истина;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область МодельДанныхИБ

Функция ВсеОперацииЗакрытияМесяца()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОперацииЗакрытияМесяца.Ссылка КАК Ссылка
		|ИЗ
		|	Перечисление.ОперацииЗакрытияМесяца КАК ОперацииЗакрытияМесяца";
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
КонецФункции

Функция СостояниеЭтаповЗакрытияМесяца(ОперацииЗакрытияМесяца, Период)
	
	Возврат ЗакрытиеМесяцаСервер.ОпределитьСостояниеЭтаповРасчета(ОперацииЗакрытияМесяца, Период);
	
КонецФункции

Функция СостояниеИспользуется(Значение)
	
	Возврат Значение <> Перечисления.СостоянияОперацийЗакрытияМесяца.НеТребуется;
	
КонецФункции

Функция СостояниеУспешно(Значение)
	
	Возврат Значение <> Перечисления.СостоянияОперацийЗакрытияМесяца.НеТребуется
		И Значение <> Перечисления.СостоянияОперацийЗакрытияМесяца.ВыполненоУспешно
	
КонецФункции

Функция ОперацияЗакрытияЗависитОтМесяца(Значение)
	
	Возврат Значение <> Перечисления.ОперацииЗакрытияМесяца.ИсправлениеДублейВидовЗапасов;
	
КонецФункции

#КонецОбласти

#Область МодельДанныхСКД

Функция ЗначениеПараметраСКД(ИмяПараметра)
	
	Настройки = КомпоновщикНастроек.ПолучитьНастройки();
	ПараметрКомпоновки = Настройки.ПараметрыДанных.Элементы.Найти(
		Новый ПараметрКомпоновкиДанных(ИмяПараметра));
	Возврат ПараметрКомпоновки.Значение;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли